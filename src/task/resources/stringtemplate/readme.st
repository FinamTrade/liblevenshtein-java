readme(project, cmd) ::= <<
# liblevenshtein

## Java

### A library for generating Finite State Transducers based on Levenshtein Automata.

[![Maven Central][maven-version-badge]][maven-link]
[![Artifactory][artifactory-badge]][artifactory-link]
[![License][license-badge]][license]
[![Build Status][build-status-badge]][travis-ci]
[![Codacy Badge][codacy-badge]][codacy-link]
[![Coverage Status][coverage-badge]][coveralls]
[![Coverity Scan Build Status][static-analysis-badge]][coverity]
[![Dependency Status][dependency-status-badge]][versioneye]
[![Gitter][gitter-badge]][gitter-channel]

Levenshtein transducers accept a query term and return all terms in a
dictionary that are within n spelling errors away from it. They constitute a
highly-efficient (space _and_ time) class of spelling correctors that work very
well when you do not require context while making suggestions.  Forget about
performing a linear scan over your dictionary to find all terms that are
sufficiently-close to the user's query, using a quadratic implementation of the
[Levenshtein distance][wikipedia-levenshtein-distance] or
[Damerau-Levenshtein distance][wikipedia-damerau-levenshtein-distance], these
babies find _all_ the terms from your dictionary in linear time _on the length
of the query term_ (not on the size of the dictionary, on the length of the
query term).

If you need context, then take the candidates generated by the transducer as a
starting place, and plug them into whatever model you're using for context (such
as by selecting the sequence of terms that have the greatest probability of
appearing together).

For a quick demonstration, please visit the [Github Page, here][live-demo].
There's also a command-line interface, [liblevenshtein-java-cli][java-cli].
Please see its [README.md][java-cli-readme] for acquisition and usage information.

The library is currently written in Java, CoffeeScript, and JavaScript, but I
will be porting it to other languages, soon.  If you have a specific language
you would like to see it in, or package-management system you would like it
deployed to, let me know.

[![][bintray-watch-img]][bintray-watch-link]

### Branches

|                            Branch | Description                                 |
| ---------------------------------:|:------------------------------------------- |
|           [master][master-branch] | Latest, development source.                 |
|         [release][release-branch] | Latest, release source.                     |
| [release-2.x][release-branch-2.x] | Latest, release source for version 2.x.     |

### Documentation

When it comes to documentation, you have several options:
- [Wiki][wiki]
- [Javadoc][javadoc]
- [Source Code][tagged-source]

### Basic Usage:

### Minimum Java Version

liblevenshtein has been developed against Java &ge; $project.java.targetVersion$.
It will not work with prior versions.

$installation/all(project, cmd, "###")$

### Usage

$/wiki/sample(project, cmd)$

Please see the [wiki][wiki] for more details.

### Reference

This library is based largely on the work of
[Stoyan Mihov][stoyan-mihov], [Klaus Schulz][klaus-schulz], and
Petar Nikolaev Mitankin:
[Fast String Correction with Levenshtein-Automata][fast-string-correction-2002].
For more information, please see the [wiki][wiki].

[top-20-most-common-english-words.txt]: https://raw.githubusercontent.com/universal-automata/liblevenshtein-java/$project.maven.version$/src/test/resources/top-20-most-common-english-words.txt "top-20-most-common-english-words.txt"

[maven-version-badge]: https://maven-badges.herokuapp.com/maven-central/$project.maven.groupId$/$project.maven.artifactId$/badge.svg
[maven-link]: https://maven-badges.herokuapp.com/maven-central/$project.maven.groupId$/$project.maven.artifactId$ "Latest, stable release (Maven Central)"
[bintray-badge]: https://api.bintray.com/packages/universal-automata/liblevenshtein/liblevenshtein-java/images/download.svg
[bintray-link]: https://bintray.com/universal-automata/liblevenshtein/liblevenshtein-java/_latestVersion "Latest, stable release (Bintray)"
[maven-refs-badge]: https://www.versioneye.com/java/$project.maven.groupId$:$project.maven.artifactId$/reference_badge.svg
[maven-refs]: https://www.versioneye.com/java/$project.maven.groupId$:$project.maven.artifactId$/references
[license-badge]: https://img.shields.io/github/license/universal-automata/liblevenshtein-java.svg
[license]: https://raw.githubusercontent.com/universal-automata/liblevenshtein-java/master/LICENSE "MIT Licence"
[build-status-badge]: https://travis-ci.org/universal-automata/liblevenshtein-java.svg?branch=master
[travis-ci]: https://travis-ci.org/universal-automata/liblevenshtein-java "Build status"
[coverage-badge]: https://coveralls.io/repos/github/universal-automata/liblevenshtein-java/badge.svg?branch=master
[coveralls]: https://coveralls.io/github/universal-automata/liblevenshtein-java?branch=master "Unit test, code coverage"
[static-analysis-badge]: https://img.shields.io/coverity/scan/8476.svg
[coverity]: https://scan.coverity.com/projects/universal-automata-liblevenshtein-java "Static code analysis"
[dependency-status-badge]: https://www.versioneye.com/user/projects/570345d4fcd19a0051853d99/badge.svg
[versioneye]: https://www.versioneye.com/user/projects/570345d4fcd19a0051853d99 "Dependency updates"
[gitter-badge]: https://badges.gitter.im/universal-automata/liblevenshtein-java.svg
[gitter-channel]: https://gitter.im/universal-automata/liblevenshtein-java?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge "Gitter channel"
[bintray-watch-img]: https://www.bintray.com/docs/images/bintray_badge_color.png
[bintray-watch-link]: https://bintray.com/universal-automata/liblevenshtein/liblevenshtein-java/view?source=watch 'Get automatic notifications about new "liblevenshtein-java" versions'
[codacy-badge]: https://api.codacy.com/project/badge/Grade/ad002473702c4d0b8532a6ba38af2010
[codacy-link]: https://www.codacy.com/app/dylon-devo-github/liblevenshtein-java?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=universal-automata/liblevenshtein-java&amp;utm_campaign=Badge_Grade "Code health"
[artifactory-badge]: https://img.shields.io/badge/artifactory-$project.meta.artifactoryVersion$-$project.meta.artifactoryColor$.svg?style=flat
[artifactory-link]: https://oss.jfrog.org/artifactory/webapp/#/artifacts/browse/tree/General/oss-release-local/com/github/universal-automata/liblevenshtein/$project.maven.version$ "Latest, development release (Artifactory)"

$/wiki/footer(project, cmd)$
>>
/* vim: set ft=ghmarkdown: */
